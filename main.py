# ---------------------------------------------DZ7----------------------------------------

# Задача 34:  Винни-Пух попросил Вас посмотреть, есть ли в его стихах ритм. 
# Поскольку разобраться в его кричалках не настолько просто, насколько легко он их придумывает, Вам стоит написать программу.
# Винни-Пух считает, что ритм есть, если число слогов (т.е. число гласных букв) в каждой фразе стихотворения одинаковое.
# Фраза может состоять из одного слова, если во фразе несколько слов, то они разделяются дефисами.
# Фразы отделяются друг от друга пробелами. Стихотворение  Винни-Пух вбивает в программу с клавиатуры.
# В ответе напишите “Парам пам-пам”, если с ритмом все в порядке и “Пам парам”, если с ритмом все не в порядке.


# stix = "пара-ра-рам рам-пам-папам па-ра-па-да"
# glasnaya = ['а', 'о', 'у', 'ы', 'э', 'е', 'ё', 'и', 'ю', 'я']
# fraza = stix.split()
# if len(fraza) < 2:
#     print("Количество фраз должны быть больше одной ")
# else:
#     countGlasnaya = []
#     for i in fraza:
#         countGlasnaya.append(len([x for x in i if x.lower() in glasnaya]))
#     if countGlasnaya.count(countGlasnaya[0]) == len(countGlasnaya):
#         print('Парам пам-пам')
#     else: 
#         print('Пам парам')

    
# Задача 36: Напишите функцию def print_operation_table(operation, num_rows=6, num_columns=6),
# которая принимает в качестве аргумента функцию, вычисляющую элемент по номеру строки и столбца.
# Аргументы num_rows и num_columns указывают число строк и столбцов таблицы, которые должны быть распечатаны.
# Нумерация строк и столбцов идет с единицы (подумайте, почему не с нуля).
# Примечание: бинарной операцией называется любая операция, у которой ровно два аргумента, как, например, у операции умножения.

def print_operation_table(operation, num_rows=6, num_columns=6):
    if num_rows < 2 or num_columns < 2:
        print('Размероность табл должна быть больше 2')
    else:
        print(' '.join([str(i) for i in range(1, num_columns + 1)]))
        for i in range(2,num_rows + 1):
            print(i, end = ' ')
            for j in range(2,num_columns + 1):
                print (operation(i,j), end = ' ')
            print()

print_operation_table(lambda x,y: x * y)           